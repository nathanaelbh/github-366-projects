init 8
init 0
init 0
init 0
set $3 # $3 = 8
init A
init F
init 0
init 0
set $2
swinc $2, $3 # mem(8) = N = 100
init 0
init 0
init 1
init 0
set $2 # $2 = 256
init 0
init 0
init 2
init 0
set $3 # $3 = 512

loop_rightup:
add1c 1 # mem(9)++

loop_right:

seqc 1
jif loop_up
seqc 0
jif part_2


add1 $0
swinc $0, $2
swinc $1, $3

j loop_right

loop_up:

seqc 1
jif loop_leftdown
seqc 0
jif part_2

add1 $1
swinc $0, $2
swinc $1, $3

j loop_up


loop_leftdown:
add1c 1 # mem(9)++

loop_left:


seqc 1
jif loop_down
seqc 0
jif part_2

sub1 $0
swinc $0, $2
swinc $1, $3

j loop_left

loop_down:

seqc 1
jif loop_rightup
seqc 0
jif part_2

sub1 $1
swinc $0, $2
swinc $1, $3

j loop_down

part_2:

init 0
init 0
init 1
init 0
set $2 # $2 = 256
init 0
init 0
init 2
init 0
set $3 # $3 = 512


init 1
init 0
init 0
init 0
set $0
swf 0 # mem(0) = a = 1

init 1
init 0
init 0
init 0
set $0
swf 1 # mem(0) = b = 1


init F
init E
init F
init F
set $0
swf 2 # mem(2) = A = -17

init 0
init 5
init 0
init 0
set $0
swf 3 # mem(3) = B = 80


improve_ab:

seqc 0 # mem(4) = mem(8)?
jif done

# Is f(x,y) negative? 

lwf 0 # $0 = a
lwmult $2 # $0 = ax[i]
hold

lwf 1 # $0 = b
lwmult $3 # $0 = by[i]
addback 

slt $0

# F[X,Y] negative?

lwf 2 # $0 = A
lwmult $2 # $0 = Ax[i]
add1 $2 # $2 += 1
hold

lwf 3 # $0 = B
lwmult $3 # $0 = By[i]
add1 $3 # $3 += 1
addback 


jif pred_neg
j pred_notneg


# c[i] is negative.
pred_neg:
slt $0
jif improve_ab

lwprev $2 # $0 = x[i]
lwfaddreg 0 # $0 = a + x[i]
swf 0 # a = $0

lwprev $3 # $0 = y[i]
lwfaddreg 1 # $0 = b + y[i]
swf 1 # b = $0

j improve_ab

# c[i] is not negative.
pred_notneg:
snotneg $0
jif improve_ab

lwprev $2 # $0 = x[i]
lwfsubreg 0 # $0 = a - x[i]
swf 0 # a = $0

lwprev $3 # $0 = y[i]
lwfsubreg 1 # $0 = b - y[i]
swf 1 # b = $0

j improve_ab



done:
